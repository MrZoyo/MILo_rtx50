*.pyc
.vscode
output*/
build
__pycache__
tensorboard_3d
screenshots
debug/
gaussian_renderer/__pycache__
scene/__pycache__
utils/__pycache__
*.egg-info
debug*
dtu_eval/Offical_DTU_Dataset
*.sh
submodules/diff-gaussian-rasterization-org
snapshot_fw.dump
snapshot_bw.dump
train_test_depth.py
*.out

log/
profiler_test.py

#####################

wandb/
milo/blender/package
milo/blender/renders

*.ipynb
lrm_milo
mesh_extract_*_old.py
train_old.py
*_old.yaml
mesh_old.py

camera_traj
*.pt
*.pth
*.pkl
output*
*.slurm
*.pyc
*.ply
*.obj
visualize_results.ipynb
visualize_results*.ipynb
train_factorized*.py
submodules/tetra_triangulation_vanilla

renderings/*
milo/custom_train.py
milo/custom_extract_meshes.py

# To add back
milo/configs/mesh/ablation*
milo/configs/mesh/radegs*
milo/configs/mesh/foreground_only.yaml
milo/configs/mesh/mesh_rendered_normals.yaml
milo/configs/mesh/mini_splatting2_dtu.yaml
#
milo/mesh_extract_sdf_refinement.py
milo/mesh_extract_tsdf.py
#
milo/mipnerf_train.py
milo/tandt_train.py
milo/dtu_train.py
milo/db_train.py
#
milo/mipnerf_render.py
milo/tandt_render.py
#
milo/mipnerf_extract_meshes.py
milo/dtu_extract_meshes.py
milo/tandt_extract_meshes.py

#####################

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
learnableearthparser/fast_sampler/_sampler.c
/.idea/inspectionProfiles/profiles_settings.xml
/.idea/.gitignore
/.idea/MILo_rtx50.iml
/.idea/misc.xml
/.idea/modules.xml
/.idea/vcs.xml
